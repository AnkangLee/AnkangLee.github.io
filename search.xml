<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker配置mysql环境</title>
      <link href="/2019/07/15/docker%E9%85%8D%E7%BD%AEmysql%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/07/15/docker%E9%85%8D%E7%BD%AEmysql%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>###简单使用</p><h4 id="拉取-mysql-server-镜像，使用默认-tag-latest"><a href="#拉取-mysql-server-镜像，使用默认-tag-latest" class="headerlink" title="拉取 mysql-server 镜像，使用默认 tag: latest"></a>拉取 mysql-server 镜像，使用默认 tag: latest</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure><h4 id="运行-mysql-实例"><a href="#运行-mysql-实例" class="headerlink" title="运行 mysql 实例"></a>运行 mysql 实例</h4><p>​    后台运行一个名为 msyql 并且 ROOT 用户密码为 my-secret-pw 的mysql容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker run --name mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql</span><br></pre></td></tr></table></figure><h4 id="关闭并删除容器"><a href="#关闭并删除容器" class="headerlink" title="关闭并删除容器"></a>关闭并删除容器</h4><p>​    关闭容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop mysql</span><br></pre></td></tr></table></figure><p>​    删除容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm mysql</span><br></pre></td></tr></table></figure><h3 id="自定义数据库配置"><a href="#自定义数据库配置" class="headerlink" title="自定义数据库配置"></a>自定义数据库配置</h3><p>​    MYSQL 镜像中默认的配置文件是 <code>/etc/mysql/my.cnf</code>，数据目录是 <code>/var/lib/mysql</code>。本地配置 <code>docker-mysql.conf</code> 如下：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="number">1</span> <span class="comment">#服务Id唯一</span></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">log-error</span> = /var/log/mysql/error.log</span><br><span class="line"><span class="comment">#只能用IP地址</span></span><br><span class="line">skip_name_resolve</span><br><span class="line"><span class="comment">#数据库默认字符集</span></span><br><span class="line"><span class="attr">character-set-server</span> = utf8mb4</span><br><span class="line"><span class="comment">#数据库字符集对应一些排序等规则 </span></span><br><span class="line"><span class="attr">collation-server</span> = utf8mb4_general_ci</span><br><span class="line"><span class="comment">#设置client连接mysql时的字符集,防止乱码</span></span><br><span class="line"><span class="attr">init_connect</span>=<span class="string">'SET NAMES utf8mb4'</span></span><br></pre></td></tr></table></figure><p>​    启动 mysql 容器，使用自定义的配置文件，并将mysql 容器的数据库文件夹映射到宿主机。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mysql -d --rm \</span><br><span class="line">-v /Users/LeeAnkang/dev/docker-vol/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">-v /Users/LeeAnkang/dev/docker-vol/mysql/data:/var/lib/mysql \</span><br><span class="line">-p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure><p>​    这样，一个 mysql 容器就启动起来了，使用本地的配置文件，数据文件记录在本地。</p><h3 id="优化使用"><a href="#优化使用" class="headerlink" title="优化使用"></a>优化使用</h3><p>​    将上小节的启动命令单独放入 start.sh 文件，使用时候直接启动。</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ul><li><a href="https://hub.docker.com/_/mysql" target="_blank" rel="noopener">dockerhub-mysql</a></li><li><a href="https://dev.mysql.com/doc/refman/8.0/en/linux-installation-docker.html" target="_blank" rel="noopener">Deploying MySQL on Linux with Docker</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于新博客</title>
      <link href="/2019/07/10/%E5%85%B3%E4%BA%8E%E6%96%B0%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/07/10/%E5%85%B3%E4%BA%8E%E6%96%B0%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>​    旧 blog 已亡，新 blog 初立。</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
